#include<stdio.h>
#include<windows.h>
#include<assert.h>

int intCmp(const void* x, const void* y)
{
	return *(int*)x - *(int*)y;
}
int doubleCmp(const void* x, const void* y)
{
	return (*(double*)x - *(double*)y);
}
int charCmp(const void* x, const void* y)
{
	return *(char*)x - *(char*)y;
}
void bubble_sort(void *arr, int len, int size, int(*cmp)(void *, void*))
{
	assert(arr);
	int i = 0;
	for (; i < len - 1; i++){
		int j = 0;
		int flag = 0;
		char *start = (char*)arr;
		for (; j < len - 1 - i; j++){
			if (cmp(start, start + size) > 0){
				int k = 0;
				for (; k < size; k++){
					start[k] ^= start[k + size];
					start[k + size] ^= start[k];
					start[k] ^= start[k + size];
				}
				flag = 1;
			}
			start += size;
		}
		if (!flag){
			break;
		}
	}
}
void show_int(int arr[], int len)
{
	int i = 0;
	for (i = 0; i < len; i++)
	{
		printf("%d ", arr[i])
	}
	printf("\n");
}
void show_double(double arr[], int len)
{
	int i = 0;
	for (i = 0; i < len; i++)
	{
		printf("%f ", arr[i]);
	}
	printf("\n");
}
void show_char(char arr[], int len)
{
	int i = 0;
	for (i = 0; i < len; i++)
	{
		printf("%c ", arr[i]);
	}
	printf("\n");
}
int main()
{
	int arr1[] = { 34, 1, 45, 6586, 9, 5, 2, 35, 85, 25, 346 };
	double arr2[] = { 1.32, 235.24, 435.42, 13.53, 56.346, 56.347, 6.76 };
	char arr3[] = { 'b', 'g', 'a', 'r', 'h', 'e', 'k', 'u', 't', 'n', 'x' };
	int len1 = sizeof(arr1) / sizeof(arr1[0]);
	int len2 = sizeof(arr2) / sizeof(arr2[0]);
	int len3 = sizeof(arr3) / sizeof(arr3[0]);
	bubble_sort(arr1, len1, sizeof(int), intCmp);
	bubble_sort(arr2, len2, sizeof(double), doubleCmp);
	bubble_sort(arr3, len3, sizeof(char), charCmp);
	printf("int sort : \n");
	show_int(arr1, len1);
	printf("double sort : \n");
	show_double(arr2, len2);
	printf("char sort : \n");
	show_char(arr3, len3);
	system("pause");
	return 0;
}
